from subprocess import *
import sys
# executing another python script
interpreter = sys.executable

print(interpreter)


# levels = int(input("""
#       Is the file:

#       0. Same Directory?
#       1. One level before?
#       2. Two levels before?

#       """))


# if levels == 1:
#     exp = f'"../{input("Enter the file name that you want to run: ")}.py"'
#     fileName = eval(exp)
# elif levels == 2:
#     exp = f'"../../{input("Enter the file name that you want to run: ")}.py"'
#     fileName = eval(exp)
# else:
#     fileName = input("Enter the file name that you want to run: ") + ".py"


# print(fileName)
# p1 = Popen([interpreter, "../dumpy2.py"], stdin=PIPE, stdout=PIPE,
#            stderr=PIPE, universal_newlines=True, shell=True)

# p1 = Popen([interpreter, "../dumpy2.py"])
p1 = Popen([interpreter, "../test.py"],
           universal_newlines=False, stderr=PIPE, stdout=PIPE, stdin=PIPE)

# out, err = p1.communicate(input="3\nJana".encode("UTF-8"))
p1.stdin.write("3\nJana\n".encode("UTF-8"))


# out, err = p1.communicate(input=p1.stdin)
# run works
# call workss
# popen works without the stdout=PIPE (and oc course without stdin=PIPE; since it freezes everything) + with the communicate and wait

# p1.stdin.write("5\n")

p1.wait()

# p1.wait()
# # print(p1.stdin)
# # print(p1.stderr)
# print(p1.stdout.read())

# print(res[0].decode("UTF-8"))

print(p1.stdout.decode("UTF-8"))
